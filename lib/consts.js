export const NAVIGATION_STEPS = {
  TOKEN_SETUP: {
    idx: 1,
    title: 'Token Setup',
    description: 'Select the futures for your own version of the DAY token',
    className: 'step_token-setup',
    iconClassName: 'step-icons_token-setup',
    propertyKeys: ['tokenName', 'symbol'],
    nextUrl: '/step-2',
  },
  TIMEMINT_SETUP: {
    idx: 2,
    title: 'Timemint Setup',
    description: 'Setup minting and halving rate your contract will apply',
    className: 'step_timemint-setup',
    iconClassName: 'step-icons_timemint-setup',
    propertyKeys: ['minMintingPower', 'maxMintingPower', 'halvingCycle', 'mintingPeriod'],
    nextUrl: '/step-3',
  },
  CONTRACT_SETUP: {
    idx: 3,
    title: 'Contract Setup',
    description: 'Choose the specifics of your smart contract',
    className: 'step_contract-setup',
    iconClassName: 'step-icons_contract-setup',
    propertyKeys: ['maxAddresses', 'startingId', 'totalMintingId',
      'teamLockPeriod', 'postDeploymentMaxIds', 'minimumBalance'],
    nextUrl: '/step-4',
  },
  PUBLISH: {
    idx: 4,
    title: 'Publish',
    description: 'Check your contract\'s data and proceed with the deployment',
    className: 'step_publish',
    iconClassName: 'step-icons_publish',
    propertyKeys: ['tokenName', 'symbol',
      'minMintingPower', 'maxMintingPower', 'halvingCycle', 'mintingPeriod',
      'maxAddresses', 'startingId', 'totalMintingId',
      'teamLockPeriod', 'postDeploymentMaxIds', 'minimumBalance'],
    nextUrl: '/step-5',
  },
  WATCH: {
    idx: 5,
    title: 'Watch Page',
    description: 'Watch your deployed contract details and also assign late TimeMints',
    className: 'step_watch',
    iconClassName: 'step-icons_watch',
  },
};

export const PROPERTIES = [
  {
    name: 'tokenName',
    title: 'Token name',
    errorMessage: 'Please enter a valid token name',
    validator: value => typeof value === 'string' && value.length > 0 && value.length < 30,
  },
  {
    name: 'symbol',
    title: 'Symbol',
    errorMessage: 'Please enter a valid symbol',
    validator: value => typeof value === 'string' && value.length > 0 && value.length < 30,
  },
  {
    name: 'minMintingPower',
    title: 'Minimum minting power',
    errorMessage: 'Please enter a valid Minimum minting power',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'maxMintingPower',
    title: 'Max minting power',
    errorMessage: 'Please enter a valid Max minting power',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'halvingCycle',
    title: 'Halving cycle',
    errorMessage: 'Please enter a valid Halving cycle',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'mintingPeriod',
    title: 'Minting period in sec',
    errorMessage: 'Please enter a valid Minting period in sec',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'maxAddresses',
    title: 'Max addresses',
    errorMessage: 'Please enter a valid Max addresses',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'startingId',
    title: 'Starting Id for Team\'s minting address',
    errorMessage: 'Please enter a valid Starting Id',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'totalMintingId',
    title: 'Total team\'s minting Id',
    errorMessage: 'Please enter a valid Total team\'s minting Id',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'teamLockPeriod',
    title: 'Team lock period in seconds',
    errorMessage: 'Please enter a valid Team lock period',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'postDeploymentMaxIds',
    title: 'Post deployment max Ids',
    errorMessage: 'Please enter a valid Post deployment max Ids',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'minimumBalance',
    title: 'Minimum balance to transfer a minter',
    errorMessage: 'Please enter a valid Minimum balance',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
];

export const NETWORK_MESSAGES = {
  '1': 'You are connected to Mainnet',
  '2': 'You are connected to deprecated network. Switch to Mainnet',
  '3': 'You are connected to Testnet. Switch to Mainnet',
  default: 'You are connected to an unknown network',
};
