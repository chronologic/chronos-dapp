export const NAVIGATION_STEPS = {
  chronos:{
      TOKEN_SETUP: {
        idx: 1,
        title: 'Token Setup',
        description: 'Select the features for your own version of the DAY token',
        className: 'step_token-setup',
        iconClassName: 'step-icons_token-setup',
        propertyKeys: ['tokenName', 'symbol'],
        nextUrl: '/chronos/step-2',
      },
      TIMEMINT_SETUP: {
        idx: 2,
        title: 'Timemint Setup',
        description: 'Setup minting and halving rate your contract will apply',
        className: 'step_timemint-setup',
        iconClassName: 'step-icons_timemint-setup',
        propertyKeys: ['minMintingPower', 'maxMintingPower', 'halvingCycle', 'mintingPeriod'],
        nextUrl: '/chronos/step-3',
      },
      CONTRACT_SETUP: {
        idx: 3,
        title: 'Contract Setup',
        description: 'Choose the specifics of your smart contract',
        className: 'step_contract-setup',
        iconClassName: 'step-icons_contract-setup',
        propertyKeys: ['maxAddresses', 'startingId', 'totalMintingId',
          'teamLockPeriod', 'postDeploymentMaxIds', 'minimumBalance'],
        nextUrl: '/chronos/step-4',
      },
      PUBLISH: {
        idx: 4,
        title: 'Publish',
        description: 'Check your contract\'s data and proceed with the deployment',
        className: 'step_publish',
        iconClassName: 'step-icons_publish',
        propertyKeys: ['tokenName', 'symbol',
          'minMintingPower', 'maxMintingPower', 'halvingCycle', 'mintingPeriod',
          'maxAddresses', 'startingId', 'totalMintingId',
          'teamLockPeriod', 'postDeploymentMaxIds', 'minimumBalance'],
        nextUrl: '/chronos/step-5',
        prevUrl: '/chronos/step-3',
      },
      WATCH: {
        idx: 5,
        title: 'Watch Page',
        description: 'Watch your deployed contract details and also assign TimeMints',
        className: 'step_watch',
        iconClassName: 'step-icons_watch',
        propertyKeys: ['receiverAddress','tokens','weiAmount','timemintId','teamMember','isTest'],
        prevUrl: '/chronos/step-4',
      },
  },
  debt:{
      DEBT_TOKEN_SETUP: {
        idx: 1,
        title: 'Token Setup',
        description: 'Select the features for your debt smart contract',
        className: 'step_debt-token-setup',
        iconClassName: 'step-icons-debt step-icons_debt-token-setup',
        propertyKeys: ['tokenName', 'symbol'],
        nextUrl: '/debt/step-2',
      },
      INTEREST_RATES_SETUP: {
        idx: 2,
        title: 'Interest Rates Setup',
        description: 'Setup your Interest rate parameters',
        className: 'step_debt-interest-rate-setup',
        iconClassName: 'step-icons-debt step-icons_interest-rate-setup',
        propertyKeys: ['interestRate','interestCycle','loanTerm','dayLength'],
        nextUrl: '/debt/step-3',
      },
      LENDER_SETUP: {
        idx: 3,
        title: 'Lender details Setup',
        description: 'Set the details of the Lender for the Smart contract',
        className: 'step_lender-setup',
        iconClassName: 'step-icons-debt step-icons_lender-setup',
        propertyKeys: ['debtOwner','initialAmount','exchangeRate','decimalUnits'],
        nextUrl: '/debt/step-4',
      },
      DEBT_PUBLISH: {
        idx: 4,
        title: 'Publish',
        description: 'Check your contract\'s data and proceed with the deployment',
        className: 'step_debt-publish',
        iconClassName: 'step-icons-debt step-icons_debt-publish',
        propertyKeys: ['tokenName', 'symbol','interestRate','interestCycle',
        'loanTerm','dayLength','debtOwner','initialAmount','exchangeRate','decimalUnits'],
        nextUrl: '/debt/step-5',
        prevUrl: '/debt/step-3',
      },
      DEBT_WATCH: {
        idx: 5,
        title: 'Watch Page',
        description: 'Watch your deployed contract details and also assign TimeMints',
        className: 'step_debt-watch',
        iconClassName: 'step-icons-debt step-icons_debt-watch',
        propertyKeys: ['receiverAddress','tokens','weiAmount','timemintId','teamMember','isTest'],
        prevUrl: '/debt/step-4',
      }
  }
};

export const PROPERTIES = [
  {
    name: 'tokenName',
    title: 'Token name',
    description: 'The NAME of your token, as shown on the block explorer',
    errorMessage: 'Please enter a valid token name',
    validator: value => typeof value === 'string' && value.length > 0 && value.length < 30,
  },
  {
    name: 'symbol',
    title: 'Symbol',
    description: 'The token TICKER, as shown on the block explorer',
    errorMessage: 'Please enter a valid symbol',
    validator: value => typeof value === 'string' && value.length > 0 && value.length < 30,
  },
  {
    name: 'minMintingPower',
    title: 'Minimum minting power',
    description: 'The lowest possible minting rate for TimeMints ( Percentage % )',
    errorMessage: 'Please enter a valid Minimum minting power',
    validator: value => new RegExp('^\\d+\\.?\\d*$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'maxMintingPower',
    title: 'Max minting power',
    description: 'The highest possible minting rate for TimeMints ( Percentage % )',
    errorMessage: 'Please enter a valid Max minting power',
    validator: value => new RegExp('^\\d+\\.?\\d*$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'halvingCycle',
    title: 'Halving cycle in Days',
    description: 'The period in days between the halvings of the minting power',
    errorMessage: 'Please enter a valid Halving cycle',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'mintingPeriod',
    title: 'Minting period in sec',
    description: 'Number of Seconds for TimeMints to mint, Equivalent of a Day to minters',
    errorMessage: 'Please enter a valid Minting period in sec',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'maxAddresses',
    title: 'Max addresses',
    description: 'The maximum possible number of TimeMints ( Team TimeMints + Investor TimeMints)',
    errorMessage: 'Please enter a valid Max addresses',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 1 && value.length > 0 && value.length < 30,
  },
  {
    name: 'startingId',
    title: 'Starting Id for Team minting addresses',
    description: 'The ID of the first Team TimeMint (Only Team TimeMints)',
    errorMessage: 'Please enter a valid Starting Id',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'totalMintingId',
    title: 'Number of team minting Addresses',
    description: 'The total number of all Team TimeMints ( Only Team TimeMints )',
    errorMessage: 'Please enter a valid Total team\'s minting Id',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'teamLockPeriod',
    title: 'Team lock period in seconds',
    description: 'Number of Seconds required by Team TimeMints to wait before Minted Tokens can be withdrawn or Transfered ',
    errorMessage: 'Please enter a valid Team lock period',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'postDeploymentMaxIds',
    title: 'Post Release Max Addresses',
    description: 'Total number of allowed Post-release TimeMints allocation',
    errorMessage: 'Please enter a valid Post Release Max IDs',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'minimumBalance',
    title: 'Min balance to transfer a TimeMint',
    description: 'Minimum number of minted tokens that can be transferred by TimeMints ( WEI )',
    errorMessage: 'Please enter a valid Minimum balance',
    validator: value => new RegExp('^\\d+$').test(value) && Number(value) > 0 && value.length > 0 && value.length < 30,
  },
  {
    name: 'receiverAddress',
    title: 'Receiver\'s Address',
    description: 'Ethereum Adress of TimeMint receiver',
    errorMessage: 'Please enter a valid Receiver\'s Address',
    validator: (value,web3) => web3.isAddress(value),
  },
  {
    name: 'tokens',
    title: 'Number of Tokens',
    description: 'Number of TimeMint tokens to be awarded ( ETH )',
    errorMessage: 'Please enter a valid Token amount',
    validator: value => new RegExp('^\\d+\\.?\\d*$').test(value)&& Number(value) > 0  && value.length > 0 && value.length < 30,
  },
  {
    name: 'weiAmount',
    title: 'ETH Value',
    description: 'Equivalent value of TimeMint Tokens  in ETH',
    errorMessage: 'Please enter a valid ETH Value',
    validator: value => new RegExp('^\\d+\\.?\\d*$').test(value)  && value.length > 0 && value.length < 30,
  },
  {
    name: 'timemintId',
    title: 'Timemint Id',
    description: 'Timemint Id to be awarded to the Receiver',
    errorMessage: 'Please enter a valid Timemint ID',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && value.length < 30,
  },
  {
    name: 'teamMember',
    title: 'Is this a team member ?',
    description: 'Is the TimeMint receiver a team member?',
    errorMessage: 'Please indicate Team member',
    validator: value => (!value || value === true),
  },
  {
    name: 'isTest',
    title: 'Is this a test ?',
    description: 'Is the TimeMint allocation a test?',
    errorMessage: 'Please indicate Test',
    validator: value => (!value || value === true),
  },
  {
    name: 'interestRate',
    title: 'Interest growth rate',
    description: 'Rate at which Interest acrrues per cycle ( % )',
    errorMessage: 'Please enter a valid interestRate',
    validator: value => new RegExp('^\\d+\\.?\\d*$').test(value)  && value.length > 0 &&  Number(value) > 0 && value.length < 30,
  },
  {
    name: 'interestCycle',
    title: 'Interest Cycle in Days',
    description: 'Length of each Internet cycle (days)',
    errorMessage: 'Please enter a valid Interest Cycle',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 &&  Number(value) > 0 &&value.length < 30,
  },
  {
    name: 'loanTerm',
    title: 'Loan Maturity Length in Days',
    description: 'Number of days for Loan Maturity (days)',
    errorMessage: 'Please enter a valid Loan Maturity Length ',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && Number(value) > 0 && value.length < 30,
  },
  {
    name: 'dayLength',
    title: 'Day Length in Seconds',
    description: 'Number of seconds in a Day (secs)',
    errorMessage: 'Please enter a valid Day Length ',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && Number(value) > 0 && value.length < 30,
  },
  {
    name: 'debtOwner',
    title: 'Lender Address',
    description: 'Ethereum Address of the Lender',
    errorMessage: 'Please enter a valid Lender Address ',
    validator: (value,web3) => web3.isAddress(value),
  },
  {
    name: 'initialAmount',
    title: 'Ether Amount',
    description: 'Loan Ether Amount ( ETH )',
    errorMessage: 'Please enter a valid Ether Amount',
    validator: value => new RegExp('^\\d+\\.?\\d*$').test(value) && value.length > 0 && Number(value) > 0 && value.length < 30,
  },
  {
    name: 'exchangeRate',
    title: 'Exchange Rate',
    description: 'Number of Debt Tokens to be generated per Ether',
    errorMessage: 'Please enter a valid Exchange Rate',
    validator: value => new RegExp('^\\d+$').test(value) && value.length > 0 && Number(value) > 0 && value.length < 30,
  },
];

export const NETWORK_MESSAGES = {
  '1': 'You are connected to Mainnet',
  '2': 'You are connected to deprecated Mordern Testnet',
  '3': 'You are connected to the Ropsten Testnet',
  '4': 'You are connected to the Rinkeby Testnet',
  default: 'You are connected to an unknown network',
};

export const CONTRACT_LABELS = {
  address: 'Contract Address',
  tokenName: 'Token Name',
  symbol: 'Symbol',
  totalSupply: 'Total supply',
  decimal: 'Decimals',
  mintingPeriod: 'Minting Period (secs)',
  totalDays: 'Total Days',
  halvingCycle: 'Halving Cycle',
  dayTokenActivated: 'Tokens Activated',
  maxAddresses: 'Max Addresses',
  firstContributorId : 'First Contributor',
  firstPostIcoContributorId: 'First Post-Release TimeMint',
  firstTeamContributorId: 'First Team TimeMint',
  minMintingPower: 'Min Minting Power ( % )',
  maxMintingPower: 'Max Minting Power ( % )',
  initialBlockTimestamp: 'Initial Block Timestamp',
  teamLockPeriodInSec: 'Team Lock Period (secs)',
  totalNormalContributorIds: 'Total Normal Contributors',
  totalNormalContributorIdsAllocated: 'Total Normal Contributors Allocated',
  totalTeamContributorIds: 'Total Team TimeMints Addresses',
  totalTeamContributorIdsAllocated: 'Total Team TimeMints Allocated',
  totalPostIcoContributorIds: 'Total Post-Release TimeMints Addresses',
  totalPostIcoContributorIdsAllocated : 'Total Post-Release TimeMints Allocated'
}

export const DEBT_CONTRACT_LABELS = {
loanCycle: 'Loan Cycle',
interestRate: 'Interest rate per cycle',
maturityPeriod: 'Maturity Period',
loanAmount: 'Loan AMount',
totalInterestCycle: 'Total Interest Cycle',
lastInterstCycle: 'Last Interest Cycle',
borrowerAddress: 'Borrower',
lenderAddress: 'Lender'
}
